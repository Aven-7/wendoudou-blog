import{_ as s,o as n,c as a,R as e}from"./chunks/framework.ea40370f.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue_notes/project/name_standard.md","lastUpdated":null}'),l={name:"vue_notes/project/name_standard.md"},p=e(`<h3 id="常规命名规范" tabindex="-1">常规命名规范 <a class="header-anchor" href="#常规命名规范" aria-label="Permalink to &quot;常规命名规范&quot;">​</a></h3><p>camelCase（小驼峰式命名法 —— 首字母小写）</p><p>PascalCase（大驼峰式命名法 —— 首字母大写）</p><p>kebab-case（短横线连接式）</p><p>Snake（下划线连接式）</p><h2 id="_1、项目名" tabindex="-1">1、项目名 <a class="header-anchor" href="#_1、项目名" aria-label="Permalink to &quot;1、项目名&quot;">​</a></h2><p>全部采用小写方式， 以短横线分隔。例：my-project-name</p><h2 id="_2、目录名" tabindex="-1">2、目录名 <a class="header-anchor" href="#_2、目录名" aria-label="Permalink to &quot;2、目录名&quot;">​</a></h2><p>参照项目命名规则，有复数结构时，要采用复数命名法。例：docs、assets、components、directives、mixins、utils、views。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">my-project-name/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- BuildScript    // 流水线部署文件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">|- docs           // 项目的细化文档目录（可选）</span></span>
<span class="line"><span style="color:#A6ACCD;">|- nginx          // 部署在容器上前端项目 nginx 代理文件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">|- node_modules   // 下载的依赖包</span></span>
<span class="line"><span style="color:#A6ACCD;">|- public         // 静态页面目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- index.html // 项目入口</span></span>
<span class="line"><span style="color:#A6ACCD;">|- src            // 源码目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- api        // http 请求目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- assets     // 静态资源目录，这里的资源会被wabpack构建</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- icon   // icon 存放目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- img    // 图片存放目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- js     // 公共 js 文件目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- scss   // 公共样式 scss 存放目录</span></span>
<span class="line"><span style="color:#A6ACCD;">            |- frame.scss   // 入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">            |- global.scss  // 公共样式</span></span>
<span class="line"><span style="color:#A6ACCD;">            |- reset.scss   // 重置样式</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- components     // 组件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- plugins        // 插件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- router         // 路由</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- routes         // 详细的路由拆分目录（可选）</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- store          // 全局状态管理</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- utils          // 工具存放目录</span></span>
<span class="line"><span style="color:#A6ACCD;">        |- request.js // 公共请求工具</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- views          // 页面存放目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- App.vue        // 根组件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- main.js        // 入口文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- tests          // 测试用例</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .browserslistrc// 浏览器兼容配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .editorconfig  // 编辑器配置文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .eslintignore  // eslint 忽略规则</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .eslintrc.js   // eslint 规则</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- .gitignore     // git 忽略规则</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- babel.config.js // babel 规则</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- Dockerfile // Docker 部署文件</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- jest.config.js</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- package-lock.json</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- package.json // 依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- README.md // 项目 README</span></span>
<span class="line"><span style="color:#A6ACCD;">    |- vue.config.js // webpack 配置</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="_3、图像文件名" tabindex="-1">3、图像文件名 <a class="header-anchor" href="#_3、图像文件名" aria-label="Permalink to &quot;3、图像文件名&quot;">​</a></h2><p>全部采用小写方式， 优先选择单个单词命名，多个单词命名以下划线分隔。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">banner_sina.gif</span></span>
<span class="line"><span style="color:#A6ACCD;">menu_aboutus.gif</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4、html-文件名" tabindex="-1">4、HTML 文件名 <a class="header-anchor" href="#_4、html-文件名" aria-label="Permalink to &quot;4、HTML 文件名&quot;">​</a></h2><p>全部采用小写方式， 优先选择单个单词命名，多个单词命名以下划线分隔。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|- error_report.html</span></span>
<span class="line"><span style="color:#A6ACCD;">|- success_report.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_5、css-文件名" tabindex="-1">5、CSS 文件名 <a class="header-anchor" href="#_5、css-文件名" aria-label="Permalink to &quot;5、CSS 文件名&quot;">​</a></h2><p>全部采用小写方式， 优先选择单个单词命名，多个单词命名以短横线分隔。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|- normalize.less</span></span>
<span class="line"><span style="color:#A6ACCD;">|- base.less</span></span>
<span class="line"><span style="color:#A6ACCD;">|- date-picker.scss</span></span>
<span class="line"><span style="color:#A6ACCD;">|- input-number.scss</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_6、javascript-文件名" tabindex="-1">6、JavaScript 文件名 <a class="header-anchor" href="#_6、javascript-文件名" aria-label="Permalink to &quot;6、JavaScript 文件名&quot;">​</a></h2><p>全部采用小写方式， 优先选择单个单词命名，多个单词命名以短横线分隔。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|- index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- plugin.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- util.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- date-util.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- account-model.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- collapse-transition.js</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_7、vue-组件命名" tabindex="-1">7、Vue 组件命名 <a class="header-anchor" href="#_7、vue-组件命名" aria-label="Permalink to &quot;7、Vue 组件命名&quot;">​</a></h2><h3 id="a-单文件组件名" tabindex="-1"><p style="margin-left:30px;">a. 单文件组件名</p> <a class="header-anchor" href="#a-单文件组件名" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;a. 单文件组件名&lt;/p&gt;&quot;">​</a></h3><p>文件扩展名为 .vue 的 single-file components (单文件组件)。单文件组件名应该始终是单词大写开头 (PascalCase)。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|- index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- plugin.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- util.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- date-util.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- account-model.js</span></span>
<span class="line"><span style="color:#A6ACCD;">|- collapse-transition.js</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="b-单例组件名" tabindex="-1"><p style="margin-left:30px;">b. 单例组件名</p> <a class="header-anchor" href="#b-单例组件名" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;b. 单例组件名&lt;/p&gt;&quot;">​</a></h3><p>只拥有单个活跃实例的组件应该以 The 前缀命名，以示其唯一性。</p><p>这不意味着组件只可用于一个单页面，而是_每个页面_只使用一次。这些组件永远不接受任何 prop，因为它们是为你的应用定制的。如果你发现有必要添加 prop，那就表明这实际上是一个可复用的组件，_只是目前_在每个页面里只使用一次。</p><p>比如，头部和侧边栏组件几乎在每个页面都会使用，不接受 prop，该组件是专门为该应用所定制的。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- TheHeading.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- TheSidebar.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="c-基础组件名" tabindex="-1"><p style="margin-left:30px;">c. 基础组件名</p> <a class="header-anchor" href="#c-基础组件名" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;c. 基础组件名&lt;/p&gt;&quot;">​</a></h3><p>基础组件：不包含业务，独立、具体功能的基础组件，比如日期选择器、模态框等。这类组件作为项目的基础控件，会被大量使用，因此组件的 API 进行过高强度的抽象，可以通过不同配置实现不同的功能。</p><p>应用特定样式和约定的基础组件(也就是展示类的、无逻辑的或无状态、不掺杂业务逻辑的组件) 应该全部以一个特定的前缀开头 —— Base。基础组件在一个页面内可使用多次，在不同页面内也可复用，是高可复用组件。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- BaseButton.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- BaseTable.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- BaseIcon.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="d-业务组件" tabindex="-1"><p style="margin-left:30px;">d. 业务组件</p> <a class="header-anchor" href="#d-业务组件" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;d. 业务组件&lt;/p&gt;&quot;">​</a></h3><p>业务组件：它不像基础组件只包含某个功能，而是在业务中被多个页面复用的（具有可复用性），它与基础组件的区别是，业务组件只在当前项目中会用到，不具有通用性，而且会包含一些业务，比如数据请求；而基础组件不含业务，在任何项目中都可以使用，功能单一，比如一个具有数据校验功能的输入框。</p><p>掺杂了复杂业务的组件（拥有自身 data、prop 的相关处理）即业务组件应该以 Custom 前缀命名。业务组件在一个页面内比如：某个页面内有一个卡片列表，而样式和逻辑跟业务紧密相关的卡片就是业务组件。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- CustomCard.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="e-紧密耦合的组件名" tabindex="-1"><p style="margin-left:30px;">e. 紧密耦合的组件名</p> <a class="header-anchor" href="#e-紧密耦合的组件名" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;e. 紧密耦合的组件名&lt;/p&gt;&quot;">​</a></h3><p>和父组件紧密耦合的子组件应该以父组件名作为前缀命名。 因为编辑器通常会按字母顺序组织文件，所以这样做可以把相关联的文件排在一起。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- TodoList.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- TodoListItem.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- TodoListItemButton.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="f-组件名中单词顺序" tabindex="-1"><p style="margin-left:30px;">f. 组件名中单词顺序</p> <a class="header-anchor" href="#f-组件名中单词顺序" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;f. 组件名中单词顺序&lt;/p&gt;&quot;">​</a></h3><p>组件名应该以高级别的 (通常是一般化描述的) 单词开头，以描述性的修饰词结尾。 因为编辑器通常会按字母顺序组织文件，所以现在组件之间的重要关系一目了然。如下组件主要是用于搜索和设置功能。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SearchButtonClear.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SearchButtonRun.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SearchInputQuery.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SearchInputExcludeGlob.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SettingsCheckboxTerms.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- SettingsCheckboxLaunchOnStartup.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>还有另一种多级目录的方式，把所有的搜索组件放到“search”目录，把所有的设置组件放到“settings”目录。我们只推荐在非常大型 (如有 100+ 个组件) 的应用下才考虑这么做，因为在多级目录间找来找去，要比在单个 components 目录下滚动查找要花费更多的精力。</p><h3 id="g-完整单词的组件名" tabindex="-1"><p style="margin-left:30px;">g. 完整单词的组件名</p> <a class="header-anchor" href="#g-完整单词的组件名" aria-label="Permalink to &quot;&lt;p style=&quot;margin-left: 30px&quot;&gt;g. 完整单词的组件名&lt;/p&gt;&quot;">​</a></h3><p>组件名应该倾向于而不是缩写。 编辑器中的自动补全已经让书写长命名的代价非常之低了，而其带来的明确性却是非常宝贵的。不常用的缩写尤其应该避免。</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">components/</span></span>
<span class="line"><span style="color:#A6ACCD;">|- StudentDashboardSettings.vue</span></span>
<span class="line"><span style="color:#A6ACCD;">|- UserProfileOptions.vue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,49),r=[p];function c(i,t,o,b,u,m){return n(),a("div",null,r)}const A=s(l,[["render",c]]);export{d as __pageData,A as default};
